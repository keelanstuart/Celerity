var runtime;

var Facing = { forward: -1, right: -1, up: -1 };

var hfacing = new Facing();
var hpos;
var hori;

var dir = { x: 0.0, y: 0.0, z: 0.0 };
dir.x = 0.0;
dir.y = 0.0;
dir.z = 0.0;

var rot = { x: 0.0, y: 0.0, z: 0.0 };
rot.x = 0.0;
rot.y = 0.0;
rot.z = 0.0;

var tmpv3 = { x: 0.0, y: 0.0, z: 0.0 };
var tmpv4 = { x: 0.0, y: 0.0, z: 0.0, w: 1.0 };

var hlvel;
var hrvel;

var speed = 0.0;
var max_speed = 100.0;
var tmp = 0.0;
var speed_boost = 0.0;

var hbullet;
var bullet_idx;

function update(elapsed_seconds)
{
	runtime += elapsed_seconds;

	tmp = speed + (max_speed * speed_boost);
	dir = GetPropertyValue(hfacing.forward);
	dir.x = dir.x * tmp;
	dir.y = dir.y * tmp;
	dir.z = dir.z * tmp;
	SetPropertyValue(hlvel, dir);
}

function fire_cannon()
{
	var hbpos = FindProperty(hbullet[bullet_idx], "Position");
	SetPropertyValue(hbpos, GetPropertyValue(hpos));

	tmpv3 = GetPropertyValue(hfacing.forward);
	tmp = speed + (max_speed * speed_boost) + 120.0;
	tmpv3.x = tmpv3.x * tmp;
	tmpv3.y = tmpv3.y * tmp;
	tmpv3.z = tmpv3.z * tmp;
	var hblvel = FindProperty(hbullet[bullet_idx], "LinearVelocity");
	SetPropertyValue(hblvel, tmpv3);

	bullet_idx = (bullet_idx + 1) % 500;
}

function handle_input(action, value)
{
	//Log("input: " + action + ": " + value + "\n");

	if ((action == "Look Down") || (action == "Move Forward"))
	{
		rot = GetPropertyValue(hrvel);
		rot.x -= Math.toRadians(value * 5.0);
		SetPropertyValue(hrvel, rot);
	}
	else if ((action == "Look Up") || (action == "Move Backward"))
	{
		rot = GetPropertyValue(hrvel);
		rot.x += Math.toRadians(value * 5.0);
		SetPropertyValue(hrvel, rot);
	}
	else if ((action == "Look Left") || (action == "Strafe Left"))
	{
		rot = GetPropertyValue(hrvel);
		rot.z -= Math.toRadians(value * 5.0);
		SetPropertyValue(hrvel, rot);
	}
	else if ((action == "Look Right") || (action == "Strafe Right"))
	{
		rot = GetPropertyValue(hrvel);
		rot.z += Math.toRadians(value * 5.0);
		SetPropertyValue(hrvel, rot);
	}
	else if (action == "Increase Velocity")
	{
		speed += value * max_speed;
		if (speed > max_speed)
			speed = max_speed;
	}
	else if (action == "Decrease Velocity")
	{
		speed -= value * max_speed;
		if (speed < 0.0)
			speed = 0.0;
	}
	else if (action == "Run")
	{
		speed_boost = value;
	}
	else if (action == "Fire 1")
	{
		fire_cannon();
	}
	else if (action == "Fire 2")
	{
	}
}

function init()
{
	runtime = 0.0;

	// cache property handles now so value access is cheaper later
	hpos = FindProperty(self, "Position");
	hori = FindProperty(self, "Orientation");
	hfacing.forward = FindProperty(self, "Facing.Forward");
	hfacing.right = FindProperty(self, "Facing.Right");
	hfacing.up = FindProperty(self, "Facing.Up");
	hlvel = FindProperty(self, "LinearVelocity");
	hrvel = FindProperty(self, "RotationalVelocity");

	// create projectiles up front to avoid run-time hitches
	bullet_idx = 0;
	hbullet = new Array();
	var i;
	for (i = 0; i < 500; i++)
		hbullet[i] = CreateObject("Pellet", GetParent(self));
}
