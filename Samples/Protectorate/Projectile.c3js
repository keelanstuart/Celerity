var runtime;
var lifetime = 2.0;

var tmp = 0.0;
var tmpv3 = { x: 0.0, y: 0.0, z: 0.0 };
var dist;
var hprop_pos;
var hprop_lvel;
var pos = { x: 0.0, y: 0.0, z: 0.0 };
var lvel = { x: 0.0, y: 0.0, z: 0.0 };

var hobj_parent;
var hobj_cam;
var hprop_campos;
var collision_info;
var coll_init = 0;

var hobj_sparks;

function update(elapsed_seconds)
{
	if (elapsed_seconds == 0.0)
		return;

	runtime += elapsed_seconds;

	pos = GetPropertyValue(hprop_pos);
	lvel = GetPropertyValue(hprop_lvel);
	lvel = Vec3.mul(lvel, elapsed_seconds);
	tmp = Vec3.length(lvel);

	CheckCollisions(hobj_parent, pos, lvel, collision_info);
	if (collision_info["found"] == 1)
	{
		dist = collision_info["distance"];
		if  (dist <= tmp)
		{
			lvel = Vec3.normalize(lvel);
			lvel = Vec3.mul(lvel, dist);
			pos = Vec3.add(pos, lvel);
			lvel = Vec3.mul(lvel, 0.0);

			Log("Hit " + GetObjectName(collision_info["hobj"]) + ", distance away: " + dist + "\n");

			SetPropertyValue(hprop_lvel, lvel);
			SetPropertyValue(hprop_pos, pos);

			// TODO: spawn sparks maybe? we hit something!
		}
	}

	if (runtime >= lifetime)
	{
		SetObjFlag(self, "DRAW", 0);
		SetObjFlag(self, "UPDATE", 0);
		SetObjFlag(self, "LIGHT", 0);
	}
}

function init()
{
	runtime = 0.0;

	// cache property handles now so value access is cheaper later

	hprop_pos = FindProperty(self, "Position");
	hprop_lvel = FindProperty(self, "LinearVelocity");

	collision_info = CreateCollisionResults();
	hobj_parent = GetParent(self);
	hobj_cam = GetRegisteredObject("camera.root");
	hprop_campos = FindProperty(hobj_cam, "Position");

	SetObjFlag(self, "TEMPORARY", 1);
	SetObjFlag(self, "UPDATE", 0);
	SetObjFlag(self, "DRAW", 0);
	SetObjFlag(self, "LIGHT", 0);
}

function free()
{
	FreeCollisionResults(collision_info);
}

function fire(posx, posy, posz, velx, vely, velz)
{
	pos.x = posx;
	pos.y = posy;
	pos.z = posz;
	lvel.x = velx;
	lvel.y = vely;
	lvel.z = velz;
	
	SetPropertyValue(hprop_pos, pos);
	SetPropertyValue(hprop_lvel, lvel);

	SetObjFlag(self, "UPDATE", 1);
	SetObjFlag(self, "DRAW", 1);
	SetObjFlag(self, "LIGHT", 1);
	
	runtime = 0.0;
	tmpv3 = GetPropertyValue(hprop_campos);
	tmpv3 = Vec3.sub(tmpv3, pos);
	
	PlaySound("Protectorate/laser2.wav", 50.0, Math.random(0.95, 1.05), 0, tmpv3);
}
